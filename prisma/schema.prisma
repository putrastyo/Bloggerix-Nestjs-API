// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  email String @unique @db.VarChar(100)
  password String @db.VarChar(100)
  role Role @default(USER)
  avatar String? @db.VarChar(255)
  refresh_token  String? @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  articles Article[]
  comments Comment[]

  @@map("users")
}

model Article {
  id Int @id @default(autoincrement())
  title String @db.VarChar(100)
  content String @db.Text
  category String @db.VarChar(100)
  tags String @db.VarChar(100)
  thumbnail String @db.VarChar(255)
  author_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  author User @relation(fields: [author_id], references: [id])
  comments Comment[]

  @@map("articles")
}

model Comment {
  id Int @id @default(autoincrement())
  text String @db.Text
  user_id Int
  article_id Int

  user User @relation(fields: [user_id], references: [id])
  article Article @relation(fields: [article_id], references: [id])

  @@map("commments")
}